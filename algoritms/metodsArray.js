/*
    forEach((element,index,arr)=>element,index) - ничего не возвращает,просто итерируемся по массиву
    
    map((element)=>element); - вернет новый массив
    
    reduse((acc,value)=>acc+value); - сумма элементов массива
    
    JSON.parse(JSON.stringify(obj)) - глубокое копирование объекта;
    
    find((element)=>element === 2) - вернет первый элемент массива,который удовлетворяет условию,либо undefined

    findIndex((element)=>element === 2) - вернет индекс первого элемента массива,который удовлетворяет условию,либо -1

    filter((element)=>element >= 2) - вернет массив элементов,которые удовлетворяют условию,либо пустой массив

    push(2) - добавляет элемент в конец массива

    unshift(2) - добавляет элемент в начало массива

    pop() - удаляет последний элемент массива и возвращает его

    shift() - удаляет первый элемент массива и возвращает его

    concat([2,3,4]) - возвращает новый массив,состоящий из элементов исходного массива и элементов переданных в аргументе

    {   split(',') - возвращает массив,состоящий из элементов строки,разделенных запятой

        join('') - возвращает строку,состоящую из элементов массива,разделенных запятой }

    splice(1,2,2,3,4) - удаляет 2 элемента массива,начиная с индекса 1,и вставляет вместо них 2,3,4

    slice(1,3) - возвращает новый массив,состоящий из элементов исходного массива,начиная с индекса 1 и заканчивая индексом 3

    indexOf(2) - возвращает индекс первого элемента массива,который равен 2,либо -1

    lastIndexOf(2) - возвращает индекс последнего элемента массива,который равен 2,либо -1

    includes(2) - возвращает true,если в массиве есть элемент,который равен 2,иначе false

    reverse() - переворачивает массив
    
    some((element)=>element === 2) - вернет true,если хотя бы один элемент удовлетворяет условию,иначе false

    every((element)=>element === 2) - вернет true,если все элементы удовлетворяют условию,иначе false

    sort((a,b)=>a-b) - сортирует массив по возрастанию

    sort((a,b)=>b-a) - сортирует массив по убыванию

    sort((a,b)=>a.name.localeCompare(b.name)) - сортирует массив по алфавиту

    sort((a,b)=>b.name.localeCompare(a.name)) - сортирует массив по алфавиту в обратном порядке





*/
